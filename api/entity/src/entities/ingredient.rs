//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use super::sea_orm_active_enums::Measurement;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "ingredient")]
pub struct Model {
  #[sea_orm(primary_key)]
  pub id: i32,
  pub name: String,
  pub amount: i32,
  pub measurement: Measurement,
  pub recipe_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(
    belongs_to = "super::recipe::Entity",
    from = "Column::RecipeId",
    to = "super::recipe::Column::Id",
    on_update = "NoAction",
    on_delete = "NoAction"
  )]
  Recipe,
}

impl Related<super::recipe::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Recipe.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
